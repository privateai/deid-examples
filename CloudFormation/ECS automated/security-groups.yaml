Description: >
  This template contains the security groups required by the entire stack.
  We create them in a seperate nested template, so they can be referenced
  by all of the other nested templates.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: The VPC for the security groups
  
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  AdminIpAddress:
    Type: String
    Description: Source IP address in CIDR notation for the Administrator to allow SSH access

Resources:
  # This security group allows access the bastion host, or jump box to the cluster host
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the Bastion host to allow SSH to the private subnet
      SecurityGroupIngress:
        - CidrIp: !Ref AdminIpAddress
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Bastion

  # This security group allows access the cluster host. It will also contain an inbound
  # rule from the load balancer in a later step
  ECSHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCIDR
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 2049
          ToPort: 2049
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ECS-Hosts

  # This security group defines the inbound access to the load balancer from the internet
  # and outbound access from the load balancer to the ECS tasks
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the load balancer that sits in front of ECS
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
      SecurityGroupEgress:
        - DestinationSecurityGroupId: !Ref ECSHostSecurityGroup
          FromPort: 8080
          ToPort: 8080
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LoadBalancers

  # This ingress rule allows the load balancer to communicate with the ECS host
  InboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ECSHostSecurityGroup
      SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
      FromPort: 8080
      ToPort: 8080
      IpProtocol: tcp

Outputs:
  BastionSecurityGroup:
    Description: A reference to the security group for ECS hosts
    Value: !Ref BastionSecurityGroup

  ECSHostSecurityGroup:
    Description: A reference to the security group for ECS hosts
    Value: !Ref ECSHostSecurityGroup

  LoadBalancerSecurityGroup:
    Description: A reference to the security group for load balancers
    Value: !Ref LoadBalancerSecurityGroup